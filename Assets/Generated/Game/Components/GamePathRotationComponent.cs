//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PathRotationComponent pathRotation { get { return (PathRotationComponent)GetComponent(GameComponentsLookup.PathRotation); } }
    public bool hasPathRotation { get { return HasComponent(GameComponentsLookup.PathRotation); } }

    public void AddPathRotation(float newValue) {
        var index = GameComponentsLookup.PathRotation;
        var component = (PathRotationComponent)CreateComponent(index, typeof(PathRotationComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePathRotation(float newValue) {
        var index = GameComponentsLookup.PathRotation;
        var component = (PathRotationComponent)CreateComponent(index, typeof(PathRotationComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePathRotation() {
        RemoveComponent(GameComponentsLookup.PathRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPathRotation;

    public static Entitas.IMatcher<GameEntity> PathRotation {
        get {
            if (_matcherPathRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PathRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPathRotation = matcher;
            }

            return _matcherPathRotation;
        }
    }
}
