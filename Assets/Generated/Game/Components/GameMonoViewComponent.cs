//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MonoViewComponent monoView { get { return (MonoViewComponent)GetComponent(GameComponentsLookup.MonoView); } }
    public bool hasMonoView { get { return HasComponent(GameComponentsLookup.MonoView); } }

    public void AddMonoView(BallRunner.Views.IMonoView newInstance) {
        var index = GameComponentsLookup.MonoView;
        var component = (MonoViewComponent)CreateComponent(index, typeof(MonoViewComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceMonoView(BallRunner.Views.IMonoView newInstance) {
        var index = GameComponentsLookup.MonoView;
        var component = (MonoViewComponent)CreateComponent(index, typeof(MonoViewComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveMonoView() {
        RemoveComponent(GameComponentsLookup.MonoView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMonoView;

    public static Entitas.IMatcher<GameEntity> MonoView {
        get {
            if (_matcherMonoView == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MonoView);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMonoView = matcher;
            }

            return _matcherMonoView;
        }
    }
}
