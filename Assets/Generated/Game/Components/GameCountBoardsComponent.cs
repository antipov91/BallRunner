//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CountBoardsComponent countBoards { get { return (CountBoardsComponent)GetComponent(GameComponentsLookup.CountBoards); } }
    public bool hasCountBoards { get { return HasComponent(GameComponentsLookup.CountBoards); } }

    public void AddCountBoards(int newValue) {
        var index = GameComponentsLookup.CountBoards;
        var component = (CountBoardsComponent)CreateComponent(index, typeof(CountBoardsComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCountBoards(int newValue) {
        var index = GameComponentsLookup.CountBoards;
        var component = (CountBoardsComponent)CreateComponent(index, typeof(CountBoardsComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCountBoards() {
        RemoveComponent(GameComponentsLookup.CountBoards);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCountBoards;

    public static Entitas.IMatcher<GameEntity> CountBoards {
        get {
            if (_matcherCountBoards == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CountBoards);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCountBoards = matcher;
            }

            return _matcherCountBoards;
        }
    }
}
