//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public LeftComponent left { get { return (LeftComponent)GetComponent(InputComponentsLookup.Left); } }
    public bool hasLeft { get { return HasComponent(InputComponentsLookup.Left); } }

    public void AddLeft(bool newIsUp, bool newIsDown, bool newIsPressed) {
        var index = InputComponentsLookup.Left;
        var component = (LeftComponent)CreateComponent(index, typeof(LeftComponent));
        component.isUp = newIsUp;
        component.isDown = newIsDown;
        component.isPressed = newIsPressed;
        AddComponent(index, component);
    }

    public void ReplaceLeft(bool newIsUp, bool newIsDown, bool newIsPressed) {
        var index = InputComponentsLookup.Left;
        var component = (LeftComponent)CreateComponent(index, typeof(LeftComponent));
        component.isUp = newIsUp;
        component.isDown = newIsDown;
        component.isPressed = newIsPressed;
        ReplaceComponent(index, component);
    }

    public void RemoveLeft() {
        RemoveComponent(InputComponentsLookup.Left);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherLeft;

    public static Entitas.IMatcher<InputEntity> Left {
        get {
            if (_matcherLeft == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.Left);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherLeft = matcher;
            }

            return _matcherLeft;
        }
    }
}
