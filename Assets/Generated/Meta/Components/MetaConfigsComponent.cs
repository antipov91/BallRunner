//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity configsEntity { get { return GetGroup(MetaMatcher.Configs).GetSingleEntity(); } }

    public bool isConfigs {
        get { return configsEntity != null; }
        set {
            var entity = configsEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isConfigs = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    static readonly ConfigsComponent configsComponent = new ConfigsComponent();

    public bool isConfigs {
        get { return HasComponent(MetaComponentsLookup.Configs); }
        set {
            if (value != isConfigs) {
                var index = MetaComponentsLookup.Configs;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : configsComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherConfigs;

    public static Entitas.IMatcher<MetaEntity> Configs {
        get {
            if (_matcherConfigs == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.Configs);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherConfigs = matcher;
            }

            return _matcherConfigs;
        }
    }
}
